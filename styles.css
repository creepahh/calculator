* {
    box-sizing: border-box;
}

body {
    background-color: rgb(190, 184, 190);
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

button {
    padding: 0;
    margin: 0;
    background-color: rgb(187, 168, 168);
    font-size: 1.2rem;
    border: none;
    cursor: pointer;
}

button:focus,
button:hover {
    background-color: rgb(216, 158, 83);
}

.page {
    display: grid;
    margin: auto;
    width: 300px; 
    height: 400px; 
    grid-template-areas: 
        "header" 
        "calci";
    grid-template-rows: 1fr 3fr; 
    box-shadow: 0 0 20px 0px rgb(223, 67, 210);
}

.header {
    grid-area: header;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 5px;
    background-color: black;
    color: white;
}

.display-area {
    background-color: black;
    text-align: right;
    height: 60px; 
    width: 100%;
    font-size: 1.5rem; 
    padding: 10px;
    color: white;
    border: none;
}

.calci {
    display: grid;
    grid-area: calci;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(5, 1fr);
    gap: 5px;
}

/* Operator button */
button.col {
    background-color: rgb(158, 204, 231);
}

button.col:hover,
button.col:focus {
    background-color: rgb(114, 241, 167);
}

/* Erase buttons  */
button.eras {
    color: red;
    font-size: large;
}

button.eras:hover,
button.eras:focus {
    background-color: rgb(122, 107, 107);
}

/* Specific buttons */
.c {
    grid-area: 1 / 1 / 2 / 2;
}

.erase {
    grid-area: 1 / 2 / 2 / 3;
}


/* Number buttons  */
.on { grid-area: 4 / 1 / 5 / 2; }
.tw { grid-area: 4 / 2 / 5 / 3; }
.th { grid-area: 4 / 3 / 5 / 4; }
.fo { grid-area: 3 / 1 / 4 / 2; }
.fi { grid-area: 3 / 2 / 4 / 3; }
.si { grid-area: 3 / 3 / 4 / 4; }
.se { grid-area: 2 / 1 / 3 / 2; }
.ei { grid-area: 2 / 2 / 3 / 3; }
.ni { grid-area: 2 / 3 / 3 / 4;; }
.ze { grid-area: 5 / 1 / 6 / 3; }

/* Operator buttons */
.divide { grid-area: 1 / 3 / 2 / 4; }
.multiply { grid-area: 2 / 4 / 3 / 5; }
.minus { grid-area: 3 / 4 / 4 / 5; }
.plus { grid-area: 4 / 4 / 5 / 5; } 

.equal {
    grid-area: 5 / 3 / 6 / 5;
}

.equal:hover,
.equal:focus {
    background-color: rgb(27, 109, 27);
}
